/* Common reset */
html, body, #root {
  height: 100%;
  width: 100%;
  margin: 0;
  padding: 0;
}

.content {
  padding-top: 90px; /* space from navbar */
  width: 100%;
  transition: background 0.5s ease, color 0.5s ease;
}

/* Grid layout for products */
.grid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(220px, 1fr));
  gap: 20px;
  margin-top: 20px;
}

.no-items {
  text-align: center;
  font-size: 18px;
  margin-top: 40px;
}

/* Search Input - Neon Glow */
.search-input {
  padding: 10px 16px;
  border-radius: 12px;
  border: 1px solid rgba(108,92,231,0.5);
  background: #111217;
  color: #fff;
  transition: all 0.3s ease;
}

.search-input::placeholder {
  color: rgba(255,255,255,0.5);
}

.search-input:focus {
  border-color: #6c5ce7;
  box-shadow: 0 0 8px rgba(108,92,231,0.7), 0 0 20px rgba(108,92,231,0.3);
  outline: none;
}

/* Light Mode */
body.light {
  background-color: #f9f9f9;
  color: #222;
}

body.light input,
body.light textarea,
body.light select {
  background-color: #fefefe;
  color: #222;
  border: 1px solid #aaa;
}

body.light .card {
  background-color: #fff;
  border: 1px solid #ccc;
}
/* Light mode buttons - light purple / pastel style */
/* Light mode buttons - soft purple gradient with halo glow */



/* Dark Mode (Gradient Background: Dark Blue → Dark Black) */
body.dark {
  background: linear-gradient(120deg, #000010, #0b0b1f, #1a1a2e, #0d0d1a);
  color: #e0e0e0;
  background-size: 400% 400%;
  animation: gradientShift 15s ease infinite;
}

@keyframes gradientShift {
  0% { background-position: 0% 50%; }
  50% { background-position: 100% 50%; }
  100% { background-position: 0% 50%; }
}

body.dark input,
body.dark textarea,
body.dark select {
  background-color: #1a1a1f;
  color: #eee;
  border: 1px solid #555;
}

/* Glow button theme */
:root {
  --btn-bg-start: #0c0d10;
  --btn-bg-end:   #111217;
  --btn-border:   rgba(59,55,100,0.45);
  --btn-glow-mid:   rgba(59,55,100,0.28);
  --btn-glow-outer:rgba(59,55,100,0.12);
  --btn-hover-border: rgba(108,92,231,0.45);
  --btn-text: #ffffff;
}

body.dark button,
.glow-button {
  display: inline-block;
  background: linear-gradient(180deg, var(--btn-bg-start), var(--btn-bg-end));
  color: var(--btn-text);
  font-weight: 700;
  padding: 12px 28px;
  border-radius: 18px;
  border: 1px solid var(--btn-border);
  cursor: pointer;
  letter-spacing: 0.2px;
  transition: transform 180ms ease, box-shadow 220ms ease, border-color 180ms ease, background 180ms;
  text-shadow: 0 1px 0 rgba(0,0,0,0.6);
  box-shadow:
    inset 0 1px 0 rgba(255,255,255,0.02),
    0 6px 20px var(--btn-glow-mid),
    0 14px 40px var(--btn-glow-outer);
}

body.dark button:hover,
.glow-button:hover {
  transform: translateY(-3px) scale(1.02);
  border-color: var(--btn-hover-border);
  box-shadow:
    inset 0 1px 0 rgba(255,255,255,0.03),
    0 8px 26px rgba(108,92,231,0.22),
    0 22px 56px rgba(59,55,100,0.18),
    0 0 36px rgba(108,92,231,0.06);
  background: linear-gradient(180deg, #0f1013, #14141a);
}

.glow-button:active {
  transform: translateY(-1px) scale(0.995);
  box-shadow:
    inset 0 2px 6px rgba(0,0,0,0.35),
    0 6px 18px rgba(59,55,100,0.18);
}

/* Navbar */
.navbar {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 12px 20px;

  background: rgba(255, 255, 255, 0.001); /* semi-transparent */
  border-bottom: 1px solid rgba(255, 255, 255, 0.1); /* subtle border */
  backdrop-filter: blur(2px);  /* frosted glass effect */
  -webkit-backdrop-filter: blur(12px);

  box-shadow: 0 4px 30px rgba(0, 0, 0, 0.25); /* soft shadow */
  border-radius: 0 0 16px 16px; /* optional: rounded bottom corners */
  z-index: 1000;
  transition: background 0.3s ease, box-shadow 0.3s ease;
}

/* Navbar dark mode gradient */
body.dark .navbar {
  background: linear-gradient(120deg, #000010, #0b0b1f, #1a1a2e, #0d0d1a);
}
body.light .navbar {
background: linear-gradient(135deg, 
    #ffffff 10%,   /* soft white */
    #c8f1ff 40%,   /* light cyan */
     #f5d9ff 60%,   /* sky blue */
    #afabb1 80% 
    #aee3ff   /* very light pink/purple */
);}
.navbar h1,
.navbar button {
  color: #fff;
}.navbar button.glow-button {
  background: rgba(108,92,231,0.15);
  border: 1px solid rgba(108,92,231,0.3);
  box-shadow: 0 4px 20px rgba(108,92,231,0.2);
  transition: transform 0.2s ease, box-shadow 0.2s ease;
}

.navbar button.glow-button:hover {
  transform: translateY(-2px);
  box-shadow: 0 6px 26px rgba(108,92,231,0.35);
}

.nav-links {
  display: flex;
  gap: 12px;
}

.nav-links button {
  padding: 6px 12px;
  border-radius: 6px;
  cursor: pointer;
  font-weight: 600;
}

/* Dark/Light Mode Toggle Button */
.mode-toggle {
  font-size: 1.2rem;
  cursor: pointer;
  background: transparent;
  border: none;
  color: inherit;
  transition: transform 0.2s ease;
}

.mode-toggle:hover {
  transform: scale(1.2);
}

/* Typing effect */
.typing {
  font-family: monospace;
  font-size: 1.5rem;
  font-weight: bold;
  white-space: nowrap;
  overflow: hidden;
  border-right: 3px solid #6c5ce7;
  width: 0;
  animation: typing 3s steps(20, end) forwards, blink 0.7s step-end infinite;
}

@keyframes typing {
  from { width: 0; }
  to { width: 20ch; }
}

@keyframes blink {
  50% { border-color: transparent; }
}

/* Glassmorphic Search Input */
.glass-input {
  padding: 10px 16px;
  border-radius: 14px;
  border: 1px solid rgba(255, 255, 255, 0.2);
  background: rgba(189, 38, 38, 0.05);
  backdrop-filter: blur(6px);
  color: #fff;
  font-size: 16px;
  transition: all 0.3s ease;
  width: 220px;
}

.glass-input::placeholder {
  color: rgba(255, 255, 255, 0.4);
}

.glass-input:focus {
  border-color: #6c5ce7;
  box-shadow: 0 0 12px rgba(108, 92, 231, 0.5);
  outline: none;
}

/* Light mode glass input color */
body.light .glass-input {
  background: rgba(137, 85, 33, 0.15); /* light mode color */
  border: 1px solid rgba(78,204,163,0.5);
  color: #222;
}

body.light .glass-input::placeholder {
  color: rgba(106, 70, 70, 0.6);
}

/* Wrapper for dynamic search input + button */
.search-wrapper {
  display: flex;
  gap: 10px;
  align-items: center;
}

/* Search input styled like glow button */
.glass-button-input {
  padding: 12px 28px;
  border-radius: 18px;
  border: 1px solid var(--btn-border);
  background: linear-gradient(180deg, var(--btn-bg-start), var(--btn-bg-end));
  color: var(--btn-text);
  font-weight: 700;
  letter-spacing: 0.2px;
  text-shadow: 0 1px 0 rgba(0,0,0,0.6);
  box-shadow:
    inset 0 1px 0 rgba(255,255,255,0.02),
    0 6px 20px var(--btn-glow-mid),
    0 14px 40px var(--btn-glow-outer);
  transition: transform 180ms ease, box-shadow 220ms ease, border-color 180ms ease, background 180ms;
  outline: none;
  width: 220px;
}

/* Light mode glow-style search button */
body.light .glass-button-input {
  background: linear-gradient(180deg, #a0e7e5, #b4f8c8); /* light gradient */
  color: #222;
  border: 1px solid rgba(34,34,34,0.4);
  box-shadow:
    inset 0 1px 0 rgba(255,255,255,0.2),
    0 6px 20px rgba(160,231,229,0.4),
    0 14px 40px rgba(180,248,200,0.2);
}

.glass-button-input::placeholder {
  color: rgba(255,255,255,0.6);
}

.glass-button-input:focus {
  transform: translateY(-2px) scale(1.02);
  border-color: var(--btn-hover-border);
  box-shadow:
    inset 0 1px 0 rgba(255,255,255,0.03),
    0 8px 26px rgba(108,92,231,0.22),
    0 22px 56px rgba(59,55,100,0.18),
    0 0 36px rgba(108,92,231,0.06);
}

/* Left-aligned search container */
.controls {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 20px;
}

.left-controls {
  display: flex;
  gap: 10px;
  align-items: center;
}

/* True Dropdown */
.dropdown {
  position: relative;
  display: inline-block;
}

.dropdown-content {
  position: absolute;
  top: 100%;
  left: 0;
  background-color: #fff; /* Light mode, change for dark mode if needed */
  min-width: 140px;
  box-shadow: 0 8px 16px rgba(0,0,0,0.2);
  border-radius: 8px;
  overflow: hidden;
  z-index: 100;
  flex-direction: column;
}

.dropdown-content button {
  padding: 10px 16px;
  border: none;
  background: #f9f9f9;
  color: #222;
  text-align: left;
  cursor: pointer;
  width: 100%;
}

.dropdown-content button:hover {
  background-color: #e0e0e0;
}

/* For dark mode */
body.dark .dropdown-content {
  background-color: #1a1a1f;
}

body.dark .dropdown-content button {
  background-color: #1a1a1f;
  color: #eee;
}

body.dark .dropdown-content button:hover {
  background-color: #333;
}

/* ---------- ADDED: exact reference CSS for container + drops (kept and appended, nothing removed) ---------- */

/* Import Montserrat (reference) */
@import url('https://fonts.googleapis.com/css2?family=Montserrat:wght@300;400;500&display=swap');

/* reference white used in original snippet */
:root {
  --ref-white: rgba(255,255,255,0.3);
}

/* background for the whole page if you want to match reference
    NOTE: don't remove your existing body backgrounds — this is scoped to .container usage */
body {
  /* keep existing backgrounds; this rule won't override your theme classes because it's non-specific.
      If you prefer the exact vibrant gradient from the reference, uncomment the next line */
  /* background: linear-gradient(45deg, #FC466B, #3F5EFB); */
  font-family: 'Montserrat', sans-serif;
  height: 100vh;
}

/* The reference's container — centers the form (placed exactly like your reference) */
.container {
  position: absolute;
  transform: translate(-50%,-50%);
  top: 50%;
  left: 50%;
  /* ensure it sits above content area padding */
  z-index: 50;
  margin-top: 60px;
}

/* The reference form styles applied to any form inside .container or your .add-form */
.container form,
.container .add-form {
  background: rgba(40, 40, 40, 0.35);;
  padding: 3em;
  height: 320px;
  border-radius: 20px;
  border-left: 1px solid var(--ref-white);
  border-top: 1px solid var(--ref-white);
  backdrop-filter: blur(10px);
  box-shadow: 20px 20px 40px -6px rgba(0,0,0,0.2);
  text-align: center;
  position: relative;
  transition: all 0.2s ease-in-out;
}

/* Title inside the form */
.container form p,
.container .add-form p {
  font-weight: 500;
  color: #fff;
  opacity: 0.7;
  font-size: 1.4rem;
  margin-top: 0;
  margin-bottom: 60px;
  text-shadow: 2px 2px 4px rgba(0,0,0,0.2);
}

/* Links inside form */
.container form a,
.container .add-form a {
  text-decoration: none;
  color: #ddd;
  font-size: 12px;
}

.container form a:hover,
.container .add-form a:hover {
  text-shadow: 2px 2px 6px #00000040;
}

/* inputs inside the container form (email/password/button style) */
.container form input,
.container .add-form input,
.container form textarea,
.container .add-form textarea {
  background: transparent;
  width: 200px;
  padding: 1em;
  margin-bottom: 2em;
  border: none;
  border-left: 1px solid var(--ref-white);
  border-top: 1px solid var(--ref-white);
  border-radius: 5000px;
  backdrop-filter: blur(5px);
  box-shadow: 4px 4px 60px rgba(0,0,0,0.2);
  color: #fff;
  font-family: Montserrat, sans-serif;
  font-weight: 500;
  transition: all 0.2s ease-in-out;
  text-shadow: 2px 2px 4px rgba(0,0,0,0.2);
}

/* hover/focus effects for those inputs */
.container form input:hover,
.container .add-form input:hover,
.container form input:focus,
.container .add-form input:focus,
.container form textarea:hover,
.container .add-form textarea:hover,
.container form textarea:focus,
.container .add-form textarea:focus {
  background: rgba(255,255,255,0.1);
  box-shadow: 4px 4px 60px 8px rgba(0,0,0,0.2);
}

/* button inside reference form */
.container form input[type="button"],
.container .add-form input[type="button"],
.container form input[type="submit"],
.container .add-form input[type="submit"] {
  margin-top: 10px;
  width: 150px;
  font-size: 1rem;
}

.container form input[type="button"]:active,
.container .add-form input[type="button"]:active,
.container form input[type="submit"]:active,
.container .add-form input[type="submit"]:active {
  background: rgba(255,255,255,0.2);
}

/* placeholder style */
.container ::placeholder,
.container .add-form ::placeholder {
  font-family: Montserrat, sans-serif;
  font-weight: 400;
  color: #fff;
  text-shadow: 2px 2px 4px rgba(0,0,0,0.4);
}

/* drops — exactly as in your reference (scoped inside .container) */
.container .drops {
  position: relative; /* children absolutely positioned relative to container */
  width: 0;
  height: 0;
  pointer-events: none;
}

.container .drop {
  background: rgba(40, 40, 40, 0.35);
  backdrop-filter: blur(10px);
  border-radius: 10px;
  border-left: 1px solid var(--ref-white);
  border-top: 1px solid var(--ref-white);
  box-shadow: 10px 10px 60px -8px rgba(0,0,0,0.2);
  position: absolute;
  transition: all 0.2s ease;
}

/* positions EXACTLY as your reference SCSS (converted to CSS) */
.container .drop-1 {
  height: 80px;
  width: 80px;
  top: -220px;
  left: 380px;
  z-index: -1;
}

.container .drop-2 {
  height: 80px;
  width: 80px;
  bottom: -30px;
  right: -450px;
}

.container .drop-3 {
  height: 100px;
  width: 100px;
  bottom: 340px;
  right: -40px;
  z-index: -1;
}

.container .drop-4 {
  height: 120px;
  width: 120px;
  top: -450px;
  right: -490px;

}

.container .drop-5 {
  height: 60px;
  width: 60px;
  bottom: -10px;
  left: -40px;
  z-index: -1;
}

/* ensure no outlines */
a,
input:focus,
select:focus,
textarea:focus,
button:focus {
    outline: none;
}

/* No JavaScript hint left out — kept exactly like your reference (but this won't run in CSS) */
/* If you want the playful alert, add it in a small script in your index.html or component */

/* ==================================== */
/* === NEW DROPDOWN STYLES === */
/* ==================================== */

.custom-dropdown-container {
  width: 200px;
  margin: 0 auto 2em;
  font-family: 'Montserrat', sans-serif;
  position: relative;
  text-align: left;
}

.custom-dropdown-selector {
  display: flex;
  justify-content: space-between;
  align-items: center;
  background: #1A1A1F;
  color: #fff;
  font-weight: 500;
  padding: 1em;
  border-radius: 5000px;
  border: 1px solid #555;
  cursor: pointer;
  transition: all 0.2s ease-in-out;
  box-shadow: 0 0 8px rgba(108, 92, 231, 0.2); /* Subtle glow */
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

body.dark .custom-dropdown-selector {
  background: #1a1a1f;
  border: 1px solid #555;
}

.custom-dropdown-selector:hover {
  border-color: #6c5ce7;
  box-shadow: 0 0 12px rgba(108, 92, 231, 0.5); /* Stronger glow on hover */
}

.custom-dropdown-selector .arrow {
  transition: transform 0.2s;
  font-size: 0.8em;
}

.custom-dropdown-selector.open .arrow {
  transform: rotate(180deg);
}

.dropdown-options {
  position: absolute;
  top: 100%;
  left: 0;
  width: 100%;
  background-color: #1a1a1f;
  border-radius: 12px;
  box-shadow: 0 8px 16px rgba(0, 0, 0, 0.4);
  z-index: 10;
  overflow: hidden;
  margin-top: 5px;
}

.dropdown-option {
  padding: 10px 15px;
  color: #eee;
  cursor: pointer;
  transition: background-color 0.2s ease;
}

.dropdown-option:hover {
  background-color: #333333;
}
/* ... all your existing CSS code exactly as you provided ... */

/* Shared glass form for AddProductForm & EditProductForm */
.glass-form {
  background: rgba(100, 100, 100, 0.2); /* between white & black */
  backdrop-filter: blur(12px);
  -webkit-backdrop-filter: blur(12px);
  border-radius: 20px;
  padding: 20px;
  margin: 20px 0;
  box-shadow: 0 8px 24px rgba(0, 0, 0, 0.3);
  border: 1px solid rgba(255, 255, 255, 0.15);
}

.glass-form h3 {
  margin-bottom: 16px;
  text-align: center;
}

.glass-form input,
.glass-form textarea {
  width: 100%;
  margin-bottom: 12px;
  padding: 10px;
  border-radius: 10px;
  border: 1px solid rgba(255, 255, 255, 0.2);
  background: rgba(255, 255, 255, 0.05);
  color: inherit;
  backdrop-filter: blur(6px);
}

.glass-form input::placeholder,
.glass-form textarea::placeholder {
  color: rgba(255, 255, 255, 0.6);
}
/* Common reset */
html, body, #root {
  height: 100%;
  width: 100%;
  margin: 0;
  padding: 0;
}

.content {
  padding-top: 90px; /* space from navbar */
  width: 100%;
  transition: background 0.5s ease, color 0.5s ease;
}

/* Light Mode with background image */
body.light {
  background: url("../public/images/light-bg.png") no-repeat center center fixed;
  background-size: 100% 100%; /* slightly zoomed in horizontally */
  background-position: center center;
  background-attachment: fixed;
  color: #222;
   height: 100vh;
  width: 100vw;
}

body.light input,
body.light textarea,
body.light select {
  background-color: #fefefe;
  color: #222;
  border: 1px solid #aaa;
}

body.light .card {
  background-color: #fff;
  border: 1px solid #ccc;
}

body.light button {
  background-color: #4ecca3; /* main light mode button color */
  color: #222;
  border: none;
  box-shadow: 0 0 8px rgba(78,204,163,0.6);
}

body.light button:hover {
  background-color: #3fbf8f; /* hover color */
  box-shadow: 0 0 12px rgba(78,204,163,0.9);
}

/* Dark Mode with background image */
body.dark {
  background: url("../public/images/dark-bg.jpg") no-repeat center center fixed,
              linear-gradient(120deg, #000010, #0b0b1f, #1a1a2e, #0d0d1a);
  background-size: cover;
  color: #e0e0e0;
  animation: gradientShift 15s ease infinite;
}

@keyframes gradientShift {
  0% { background-position: 0% 50%; }
  50% { background-position: 100% 50%; }
  100% { background-position: 0% 50%; }
}

body.dark input,
body.dark textarea,
body.dark select {
  background-color: #1a1a1f;
  color: #eee;
  border: 1px solid #555;
}

/* Existing glow buttons, navbar, forms, drops, and everything else remain unchanged. */
/* You can keep all your previously provided CSS after this — no need to remove anything. */
body.light button,
body.light .glass-button-input {
  background: linear-gradient(180deg, #99bbf2, #2d628e); /* soft purple gradient */
  color: #fff;
  border: 1px solid rgba(74, 114, 207, 0.4); /* lighter purple border */
  border-radius: 12px;
  box-shadow:
    0 0 4px   #99bbf2 /* inner glow */
    0 0 8px    #2d628e/* mid glow */
    0 0 16px  #2d628e; /* outer halo glow */
  transition: all 0.3s ease;
}

body.light button:hover,
body.light .glass-button-input:hover {
  background: linear-gradient(135deg, #99bbf2, #2d628e);
box-shadow:
    0 0 4px   #99bbf2 /* inner glow */
    0 0 8px    #2d628e/* mid glow */
    0 0 16px  #2d628e;
  transform: translateY(-2px);
}
/* Light Mode Glass Form */
